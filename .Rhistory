length(crime)
length(train$nox)
# print the lda.fit object
lda.fit
plot(lda.fit, dimen = 3, col = classes, pch= classes)
library(MASS)
# linear discriminant analysis
lda.fit <- lda(crime ~ . , data = train, na.action = na.exclude)
?lda()
length(train$crim)
length(crime)
length(train$nox)
# print the lda.fit object
lda.fit
# target classes as numeric
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 3, col = classes, pch= classes)
# the function for lda biplot arrows
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
# plot the lda results
plot(lda.fit, dimen = 2, col  =classes, pch =classes)
lda.arrows(lda.fit, myscale = 10)
library(MASS)
# linear discriminant analysis
lda.fit <- lda(crime ~ . , data = train, na.action = na.exclude)
?lda()
length(train$crim)
length(crime)
length(train$nox)
# print the lda.fit object
lda.fit
# target classes as numeric
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 3, col = classes, pch= classes)
# the function for lda biplot arrows
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
# plot the lda results
plot(lda.fit, dimen = 2, col  =classes, pch =classes)
lda.arrows(lda.fit, myscale = 6)
library(MASS)
# linear discriminant analysis
lda.fit <- lda(crime ~ . , data = train, na.action = na.exclude)
?lda()
length(train$crim)
length(crime)
length(train$nox)
# print the lda.fit object
lda.fit
# target classes as numeric
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 3, col = classes, pch= classes)
# the function for lda biplot arrows
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
# plot the lda results
plot(lda.fit, dimen = 2, col  =classes, pch =classes)
lda.arrows(lda.fit, myscale = 3)
library(MASS)
# linear discriminant analysis
lda.fit <- lda(crime ~ . , data = train, na.action = na.exclude)
?lda()
length(train$crim)
length(crime)
length(train$nox)
# print the lda.fit object
lda.fit
# target classes as numeric
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 3, col = classes, pch= classes)
# the function for lda biplot arrows
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
# plot the lda results
plot(lda.fit, dimen = 2, col  =classes, pch =classes)
lda.arrows(lda.fit, myscale = 10)
# lda.fit, correct_classes and test are available
?predict.lda
# predict classes with test data
lda.pred <- predict(lda.fit, newdata = test)
# cross tabulate the results
table(correct = correct_classes, predicted = lda.pred$class)
data("Boston")
?scale()
install.packages("clusterSim")
library(clusterSim)
data.Normalization (Boston,type="n2",normalization="column")
data.Normalization (x,type="n2",normalization="row")
data.Normalization (Boston,type="n2",normalization="row")
data("Boston")
library(clusterSim)
?scale
data.Normalization (Boston,type="n2",normalization="row")
library(MASS)
dist_eu <- dist(Boston)
summary(dist_eu)
km <-kmeans(dist_eu, centers = 4)
pairs(Boston, col = km$cluster)
library(ggplot2)
set.seed(123)
k_max <- 10
twcss <- sapply(1:k_max, function(k){kmeans(dist_eu, k)$tot.withinss})
# visualize the results
plot(1:k_max, twcss, type='b')
km <-kmeans(dist_eu, centers = 2)
pairs(Boston, col = km$cluster)
km <-kmeans(dist_eu, centers = 3)
lda.fit <- lda(km$cluster ~ . , data = Boston)
lda.fit
classes <- as.numeric(Boston$km$cluster)
classes <- as.numeric(km$cluster)
plot(lda.fit, dimen = 3, col = classes, pch= classes)
# the function for lda biplot arrows
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
# plot the lda results
plot(lda.fit, dimen = 2, col  =classes, pch =classes)
lda.arrows(lda.fit, myscale = 10)
lda.arrows(lda.fit, myscale = 20)
plot(lda.fit, dimen = 3, col = classes, pch= classes)
# the function for lda biplot arrows
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
# plot the lda results
plot(lda.fit, dimen = 2, col  =classes, pch =classes)
lda.arrows(lda.fit, myscale = 20)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
glimpse(hd)
str(hd)
summary(hd)
glimpse(gii)
str(gii)
summary(gii)
colnames(hd)
hd[1] <- "HDI index"
colnames(hd)
colnames(hd)[1] <- "Human Development Index"
knitr::opts_chunk$set(echo = TRUE)
install.packages("evaluate")
install.packages("evaluate")
setwd("F:/IODS-final")
?read.table
CommunityCrime <- read.table("https://archive.ics.uci.edu/ml/machine-learning-databases/communities/communities.data", sep=",", na.strings = c("?"))
# The column names were given as a separate file, so I read it as a different data frame.
data <- read.table("columnnames.txt", sep=",")
names <- data[,-2]
colnames(CommunityCrime) = names
colnames(CommunityCrime)
summary(CommunityCrime)
colnames(CommunityCrime)
rownames(CommunityCrime) = CommunityCrime$communityname
exclude_columns <- c("county", "community", "PolicCars", "PctPolicWhite", "PctPolicBlack", "PctPolicHisp", "PctPolicAsian", "PctPolicMinor", "LemasPctPolicOnPatr", "PolicOperBudg", "LemasGangUnitDeploy", "PolicBudgPerPop", "PolicPerPop", "PolicReqPerOffic", "LemasTotalReq", "LemasTotReqPerPop", "LemasSwornFT", "LemasSwFTPerPop", "LemasSwFTFieldOps")
CommunityCrime1 <- dplyr::select(CommunityCrime, -one_of(exclude_columns))
write.table(CommunityCrime1, file = "CommunityCrime1.txt", sep = ",", col.names = TRUE)
?write.table
write.table(CommunityCrime1, file = "CommunityCrime1.txt", sep = ",", col.names = TRUE, row.names= c(CommunityCrime$communityname))
# Write table and save the data into the working directory for furher possible use
write.table(CommunityCrime1, file = "CommunityCrime1.txt", sep = ",", col.names = TRUE, row.names= c(CommunityCrime$communityname))
CommunityCrime1 <- dplyr::select(CommunityCrime, -one_of(exclude_columns))
#Accessing libraries
library(gmodels) #accessed the gmodels-library
library(gdata) #accessed the gdata-library
library(dplyr) #accessed the dplyr-library
library(ggplot2) #accessed the ggplot2-library
library(readr) #accessed the readr-library
library(tidyr) #accessed tidyr-library
# Omitting missing values from the dataset
na.omit(CommunityCrime)
exclude_columns <- c("county", "community", "PolicCars", "PctPolicWhite", "PctPolicBlack", "PctPolicHisp", "PctPolicAsian", "PctPolicMinor", "LemasPctPolicOnPatr", "PolicOperBudg", "LemasGangUnitDeploy", "PolicBudgPerPop", "PolicPerPop", "PolicReqPerOffic", "LemasTotalReq", "LemasTotReqPerPop", "LemasSwornFT", "LemasSwFTPerPop", "LemasSwFTFieldOps")
CommunityCrime1 <- dplyr::select(CommunityCrime, -one_of(exclude_columns))
# Write table and save the data into the working directory for furher possible use
write.table(CommunityCrime1, file = "CommunityCrime1.txt", sep = ",", col.names = TRUE, row.names= c(CommunityCrime$communityname))
library(gmodels)
library(gdata)
library(dplyr) #accessed the dplyr-library
library(ggplot2) #accessed the ggplot2-library
library(readr) #accessed the readr-library
library(tidyr) #accessed tidyr-library
library(tidyverse)
library(corrplot)
library(GGally)
library(stringr)
options(max.print=1000000)
?read.table
CommunityCrime1 <- read.table('CommunityCrime1.txt', sep=",", header=TRUE)
write.table(CommunityCrime1, file = "CommunityCrime1.txt", sep = ",", col.names = TRUE)
CommunityCrime1 <- read.table('CommunityCrime1.txt', sep=",", header=TRUE, row.names= c(CommunityCrime$communityname))
CommunityCrime1 <- read.table('CommunityCrime1.txt', sep=",", header=TRUE, row.names= CommunityCrime$communityname)
write.table(CommunityCrime1, file = "CommunityCrime1.txt", sep = ",", col.names = TRUE, row.names = CommunityCrime[,4])
CommunityCrime1 <- read.table('CommunityCrime1.txt', sep=",", header=TRUE)
CommunityCrime1[,4]
CommunityCrime1[,5]
CommunityCrime1[,3]
CommunityCrime1[,3]
colnames(CommunityCrime1)
CommunityCrime1[,2]
write.table(CommunityCrime1, file = "CommunityCrime1.txt", sep = ",", col.names = TRUE, row.names = CommunityCrime[,2])
CommunityCrime1 <- read.table('CommunityCrime1.txt', sep=",", header=TRUE)
?write.table
write.table(CommunityCrime1, file = "CommunityCrime1.txt", sep = ",", col.names = TRUE, row.names = CommunityCrime1[,2])
CommunityCrime1 <- read.table('CommunityCrime1.txt', sep=",", header = TRUE)
CommunityCrime1 <- read.table('CommunityCrime1.txt', sep=",")
?read.table
write.table(CommunityCrime1, file = "CommunityCrime1.txt", sep = ",", col.names = TRUE)
CommunityCrime1 <- read.table('CommunityCrime1.txt', sep=",", header = TRUE, row.names = 2)
write.table(CommunityCrime1, file = "CommunityCrime1.txt", sep = ",", col.names = TRUE, row.names = CommunityCrime1$communityname)
write.table(CommunityCrime1, file = "CommunityCrime1.txt", sep = ",", col.names = TRUE, row.names = CommunityCrime1$communityname)
rownames(CommunityCrime1) = CommunityCrime1$communityname
rownames(CommunityCrime1)
rownames(CommunityCrime1) <-CommunityCrime1$communityname
rownames(CommunityCrime1) = CommunityCrime1$communityname
rownames(CommunityCrime1)
rownames(CommunityCrime1) <- paste(CommunityCrime1$state, CommunityCrime1$communityname)
CommunityCrime1 <- CommunityCrime1[,-1]
CommunityCrime1 <- CommunityCrime1[,-2]
write.table(CommunityCrime1, file = "CommunityCrime1.txt", sep = ",", col.names = TRUE, row.names = TRUE)
# Write table and save the data into the working directory for furher possible use
write.table(CommunityCrime1, file = "CommunityCrime1.txt", sep = ",", col.names = TRUE, row.names = TRUE)
colnames(communitycrime1)
colnames(CommunityCrime1)
# Reading the full Community and Crime data into R
CommunityCrime <- read.table("https://archive.ics.uci.edu/ml/machine-learning-databases/communities/communities.data", sep=",", na.strings = c("?"))
# The column names were given as a separate file, so I read it as a different data frame.
data <- read.table("columnnames.txt", sep=",")
# The data had another column that consisted of NA's; I didn't know what to do with it so I erased it.
names <- data[,-2]
# Assigned the names data as the column names for the dataset CommunityCrime
colnames(CommunityCrime) = names
na.omit(CommunityCrime)
CommunityCrime$communityname <- as.character(CommunityCrime$communityname)
exclude_columns <- c("county", "community", "PolicCars", "PctPolicWhite", "PctPolicBlack", "PctPolicHisp", "PctPolicAsian", "PctPolicMinor", "LemasPctPolicOnPatr", "PolicOperBudg", "LemasGangUnitDeploy", "PolicBudgPerPop", "PolicPerPop", "PolicReqPerOffic", "LemasTotalReq", "LemasTotReqPerPop", "LemasSwornFT", "LemasSwFTPerPop", "LemasSwFTFieldOps")
CommunityCrime1 <- dplyr::select(CommunityCrime, -one_of(exclude_columns))
rownames(CommunityCrime1) <- paste(CommunityCrime1$state, CommunityCrime1$communityname)
colnames(CommunityCrime1)
CommunityCrime1 <- CommunityCrime1[,-1]
colnames(CommunityCrime1)
CommunityCrime1 <- CommunityCrime1[,-1]
colnames(CommunityCrime1)
# Write table and save the data into the working directory for furher possible use
write.table(CommunityCrime1, file = "CommunityCrime1.txt", sep = ",", col.names = TRUE, row.names = TRUE)
CommunityCrime1 <- read.table('CommunityCrime1.txt', sep=",", header = TRUE, row.names = TRUE)
CommunityCrime1 <- read.table('CommunityCrime1.txt', sep=",", header = TRUE)
rownames(CommunityCrime1)
CommunityCrime <- read.table("https://archive.ics.uci.edu/ml/machine-learning-databases/00211/CommViolPredUnnormalizedData.txt", sep=",", na.strings = c("?"))
data <- read.table("columnnames.txt", sep=",")
names <- data[,-2]
colnames(CommunityCrime) = names
colnames(CommunityCrime)
# Reading the full Community and Crime data into R
CommunityCrime <- read.table("https://archive.ics.uci.edu/ml/machine-learning-databases/00211/CommViolPredUnnormalizedData.txt", sep=",", na.strings = c("?"))
data <- read.table("columnnames1.txt", sep=",")
data <- read.table("columnnames1.txt", sep=",")
data
names <- data[,-2]
colnames(CommunityCrime) = names
colnames(CommunityCrime)
CommunityCrime <- read.table("https://archive.ics.uci.edu/ml/machine-learning-databases/00211/CommViolPredUnnormalizedData.txt", sep=",", na.strings = c("?"))
# The column names were given as a separate file, so I read it as a different data frame.
data <- read.table("columnnames1.txt", sep=",")
names <- data[,-2]
colnames(CommunityCrime) = names
colnames(CommunityCrime)
summary(CommunityCrime)
options(max.print=1000000) #maxprint, just in case
#Accessing libraries
library(gmodels) #accessed the gmodels-library
library(gdata) #accessed the gdata-library
library(dplyr) #accessed the dplyr-library
library(ggplot2) #accessed the ggplot2-library
library(readr) #accessed the readr-library
library(tidyr) #accessed tidyr-library
dim(CommunityCrime)
str(CommunityCrime)
CommunityCrime$communityname <- as.character(CommunityCrime$communityname)
CommunityCrime$state <- as.character(CommunityCrime$state)
str(CommunityCrime)
exclude_columns <- c("county", "community", "PolicCars", "PctPolicWhite", "PctPolicBlack", "PctPolicHisp", "PctPolicAsian", "PctPolicMinor", "LemasPctPolicOnPatr", "PolicOperBudg", "LemasGangUnitDeploy", "PolicBudgPerPop", "PolicPerPop", "PolicReqPerOffic", "LemasTotalReq", "LemasTotReqPerPop", "LemasSwornFT", "LemasSwFTPerPop", "LemasSwFTFieldOps")
CommunityCrime11 <- dplyr::select(CommunityCrime, -one_of(exclude_columns))
dim(CommunityCrime1) # 1994 rows, 108 variables.
dim(CommunityCrime11) # 1994 rows, 108 variables.
rownames(CommunityCrime11) <- paste(CommunityCrime1$communityname, CommunityCrime1$state)
rownames(CommunityCrime11) <- paste(CommunityCrime11$communityname, CommunityCrime11$state)
colnames(CommunityCrime11)
CommunityCrime1 <- CommunityCrime1[,-1]
CommunityCrime1 <- CommunityCrime1[,-1]
CommunityCrime11 <- CommunityCrime11[,-1]
CommunityCrime11 <- CommunityCrime11[,-1]
colnames(CommunityCrime11)
exclude_columns <- c("county", "community", "communityCode", "countyCode", "PolicCars", "PctPolicWhite", "PctPolicBlack", "PctPolicHisp", "PctPolicAsian", "PctPolicMinor", "LemasPctPolicOnPatr", "PolicOperBudg", "LemasGangUnitDeploy", "PolicBudgPerPop", "PolicPerPop", "PolicReqPerOffic", "LemasTotalReq", "LemasTotReqPerPop", "LemasSwornFT", "LemasSwFTPerPop", "LemasSwFTFieldOps")
CommunityCrime11 <- dplyr::select(CommunityCrime, -one_of(exclude_columns))
# Reading the full Community and Crime data into R
CommunityCrime <- read.table("https://archive.ics.uci.edu/ml/machine-learning-databases/00211/CommViolPredUnnormalizedData.txt", sep=",", na.strings = c("?"))
# The column names were given as a separate file, so I read it as a different data set.
data <- read.table("columnnames1.txt", sep=",")
# The data had another column that consisted of NA's; I didn't know what to do with it so I erased it.
names <- data[,-2]
# Assigned the names data as the column names for the dataset CommunityCrime
colnames(CommunityCrime) = names
# Seeing whether this worked out, and it seems that the column names were assigned correctly.
colnames(CommunityCrime)
data <- read.table("columnnames1.txt", sep=",")
na.omit(CommunityCrime)
CommunityCrime$communityname <- as.character(CommunityCrime$communityname)
CommunityCrime$state <- as.character(CommunityCrime$state)
exclude_columns <- c("county", "community", "communityCode", "countyCode", "PolicCars", "PctPolicWhite", "PctPolicBlack", "PctPolicHisp", "PctPolicAsian", "PctPolicMinor", "LemasPctPolicOnPatr", "PolicOperBudg", "LemasGangUnitDeploy", "PolicBudgPerPop", "PolicPerPop", "PolicReqPerOffic", "LemasTotalReq", "LemasTotReqPerPop", "LemasSwornFT", "LemasSwFTPerPop", "LemasSwFTFieldOps")
CommunityCrime11 <- dplyr::select(CommunityCrime, -one_of(exclude_columns))
colnames(CommunityCrime11)
rownames(CommunityCrime11) <- paste(CommunityCrime11$communityname, CommunityCrime11$state)
CommunityCrime11 <- CommunityCrime11[,-1]
CommunityCrime11 <- CommunityCrime11[,-1]
colnames(CommunityCrime11)
write.table(CommunityCrime11, file = "CommunityCrime11.txt", sep = ",", col.names = TRUE, row.names = TRUE)
CommunityCrime11 <- read.table('CommunityCrime11.txt', sep=",", header = TRUE)
str(CommunityCrime1)
rownames(CommunityCrime11)
CommunityCrime <- read.table("https://archive.ics.uci.edu/ml/machine-learning-databases/00211/CommViolPredUnnormalizedData.txt", sep=",", na.strings = c("?"))
# The column names were given as a separate file, so I read it as a different data set.
data <- read.table("columnnames1.txt", sep=",")
# The data had another column that consisted of NA's; I didn't know what to do with it so I erased it.
names <- data[,-2]
# Assigned the names data as the column names for the dataset CommunityCrime
colnames(CommunityCrime) = names
data <- read.table("columnnames1.txt", sep=",")
names <- data[,-2]
colnames(CommunityCrime) = names
complete.cases(CommunityCrime)
complete.cases(CommunityCrime$rapes)
CommunityCrime$rapes
rownames(CommunityCrime1)==rownames(CommunityCrime11)
rownames(CommunityCrime1)
rownames(CommunityCrime11)
data.frame(CommunityCrime[-1], comp = complete.cases(CommunityCrime))
CommunityCrime_ <- filter(human, complete.cases(CommunityCrime$rapes))
CommunityCrime_ <- filter(CommunityCrime, complete.cases(CommunityCrime$rapes))
CommunityCrime$rapes
complete.cases(CommunityCrime$rapes)
data.frame(CommunityCrime[-1], comp = complete.cases(CommunityCrime$rapes))
CommunityCrime_ <- filter(CommunityCrime, complete.cases(CommunityCrime$rapes))
CommunityCrime_$rapes
CommunityCrime$communityname <- as.character(CommunityCrime$communityname)
CommunityCrime$state <- as.character(CommunityCrime$state)
exclude_columns <- c("county", "community", "communityCode", "countyCode", "PolicCars", "PctPolicWhite", "PctPolicBlack", "PctPolicHisp", "PctPolicAsian", "PctPolicMinor", "LemasPctPolicOnPatr", "PolicOperBudg", "LemasGangUnitDeploy", "PolicBudgPerPop", "PolicPerPop", "PolicReqPerOffic", "LemasTotalReq", "LemasTotReqPerPop", "LemasSwornFT", "LemasSwFTPerPop", "LemasSwFTFieldOps")
CommunityCrime11 <- dplyr::select(CommunityCrime, -one_of(exclude_columns))
dim(CommunityCrime11) # 2215 rows, 130 variables.
CommunityCrime_$communityname <- as.character(CommunityCrime_$communityname)
CommunityCrime_$state <- as.character(CommunityCrime_$state)
exclude_columns <- c("county", "community", "communityCode", "countyCode", "PolicCars", "PctPolicWhite", "PctPolicBlack", "PctPolicHisp", "PctPolicAsian", "PctPolicMinor", "LemasPctPolicOnPatr", "PolicOperBudg", "LemasGangUnitDeploy", "PolicBudgPerPop", "PolicPerPop", "PolicReqPerOffic", "LemasTotalReq", "LemasTotReqPerPop", "LemasSwornFT", "LemasSwFTPerPop", "LemasSwFTFieldOps")
CommunityCrime11 <- dplyr::select(CommunityCrime_, -one_of(exclude_columns))
dim(CommunityCrime11) # 2215 rows, 130 variables.
CommunityCrime_$rapes
CommunityCrime_$communityname
rownames(CommunityCrime$rapes)
rownames(CommunityCrime_$rapes)
CommunityCrimerapes_1 <- filter(CommunityCrime$rapes, complete.cases(CommunityCrime$rapes))
CommunityCrimerapes_1 <- filter(CommunityCrime, complete.cases(CommunityCrime$rapes))
CommunityCrime111 <- dplyr::inner_join(CommunityCrime, CommunityCrimerapes_1, by = 'CommunityCrimerapes_1$rapes')
CommunityCrime111 <- dplyr::inner_join(CommunityCrime, CommunityCrimerapes_1, by = 'rapes')
dim(CommunityCrime111)
CommunityCrimerapes_2 <- filter(CommunityCrime, is.na(CommunityCrime$rapes))
dim(CommunityCrimerapes_2)
CommunityCrime_ <- na.omit(CommunityCrime)
dim(CommunityCrime_)
CommunityCrime_ <- na.omit(CommunityCrime$rapes)
dim(CommunityCrime_)
CommunityCrime_ <- CommunityCrime[is.na(CommunityCrime$rapes),]
dim(CommunityCrime_)
tmp <- data.frame(CommunityCrime);
tmp[round(which(is.na(tmp))/ncol(tmp)),]
CommunityCrime$rapes
exclude_columns <- c("ViolentCrimesPerPop","nonViolPerPop", "county", "community", "communityCode", "countyCode", "PolicCars", "PctPolicWhite", "PctPolicBlack", "PctPolicHisp", "PctPolicAsian", "PctPolicMinor", "LemasPctPolicOnPatr", "PolicOperBudg", "LemasGangUnitDeploy", "PolicBudgPerPop", "PolicPerPop", "PolicReqPerOffic", "LemasTotalReq", "LemasTotReqPerPop", "LemasSwornFT", "LemasSwFTPerPop", "LemasSwFTFieldOps")
CommunityCrime11 <- dplyr::select(CommunityCrime_, -one_of(exclude_columns))
rownames(CommunityCrime11) <- paste(CommunityCrime11$communityname, CommunityCrime11$state)
rownames(CommunityCrime11)
names(CommunityCrime11)
CommunityCrime11 <- CommunityCrime11[,-1]
CommunityCrime11 <- CommunityCrime11[,-1]
write.table(CommunityCrime11, file = "CommunityCrime11.txt", sep = ",", col.names = TRUE, row.names = TRUE)
CommunityCrime11 <- read.table('CommunityCrime11.txt', sep=",", header = TRUE)
CommunityCrimes_st <- scale(CommunityCrimes11)
CommunityCrime_st <- scale(CommunityCrime11)
pca_st <- prcomp(CommunityCrime_st)
str(CommunityCrime11)
options(max.print=1000000)
glimpse(CommunityCrime11)
summary(CommunityCrime11)
CommunityCrime11$rapes
CommunityCrime <- read.table("https://archive.ics.uci.edu/ml/machine-learning-databases/00211/CommViolPredUnnormalizedData.txt", sep=",", na.strings = c("?"))
# The column names were given as a separate file, so I read it as a different data set.
data <- read.table("columnnames1.txt", sep=",")
names <- data[,-2]
colnames(CommunityCrime) = names
CommunityCrime_$communityname <- as.character(CommunityCrime_$communityname)
CommunityCrime_$state <- as.character(CommunityCrime_$state)
CommunityCrime$communityname <- as.character(CommunityCrime$communityname)
CommunityCrime$state <- as.character(CommunityCrime$state)
exclude_columns <- c("ViolentCrimesPerPop","nonViolPerPop", "county", "community", "communityCode", "countyCode", "PolicCars", "PctPolicWhite", "PctPolicBlack", "PctPolicHisp", "PctPolicAsian", "PctPolicMinor", "LemasPctPolicOnPatr", "PolicOperBudg", "LemasGangUnitDeploy", "PolicBudgPerPop", "PolicPerPop", "PolicReqPerOffic", "LemasTotalReq", "LemasTotReqPerPop", "LemasSwornFT", "LemasSwFTPerPop", "LemasSwFTFieldOps")
CommunityCrime11 <- dplyr::select(CommunityCrime, -one_of(exclude_columns))
dim(CommunityCrime11) # 2215 rows, 130 variables.
# Setting Community name and state as rownames and removing those variables from the data set.
rownames(CommunityCrime11) <- paste(CommunityCrime11$communityname, CommunityCrime11$state)
CommunityCrime11 <- CommunityCrime11[,-1]
CommunityCrime11 <- CommunityCrime11[,-1]
names(CommunityCrime11) # Checking whether this worked out - it did.
CommunityCrime11$rapes
# Write table and save the data into the working directory for furher possible use
write.table(CommunityCrime11, file = "CommunityCrime11.txt", sep = ",", col.names = TRUE, row.names = TRUE)
library(gmodels)
library(gdata)
library(dplyr) #accessed the dplyr-library
library(ggplot2) #accessed the ggplot2-library
library(readr) #accessed the readr-library
library(tidyr) #accessed tidyr-library
library(tidyverse)
library(corrplot)
library(GGally)
library(stringr)
CommunityCrime11 <- read.table('CommunityCrime11.txt', sep=",", header = TRUE)
rownames(CommunityCrime11)
summary(CommunityCrime11)
CommunityCrime_st <- scale(CommunityCrime11)
pca_st <- prcomp(CommunityCrime_st)
keep_columns <- c("rapes", "PctLess9thGrade","PctRecentImmig","NumInShelters", "racepctblack", "PctEmploy", "MalePctNevMarr", "PctWorkMom", "PctPopUnderPov", "NumStreet")
CommunityCrime22 <- dplyr::select(CommunityCrime11, one_of(keep_columns))
write.table(CommunityCrime22, file = "CommunityCrime22.txt", sep = ",", col.names = TRUE, row.names = TRUE)
dim(CommunityCrime22) # 1994 observations, 10 variables.
CommunityCrime22 <- read.table('CommunityCrime22.txt', sep=",", header = TRUE)
library(ggplot2)
library(GGally)
ggpairs(CommunityCrime22, lower = list(combo = wrap("facethist", bins = 20)))
# create a regression model with multiple explanatory variables
my_model4 <- lm(rapes ~ NumStreet + NumInShelters + racepctblack, data = CommunityCrime22)
summary(my_model4)
# create a regression model with multiple explanatory variables
my_model4 <- lm(rapes ~ NumStreet + NumInShelters + racepctblack + PctRecentImmig, data = CommunityCrime22)
summary(my_model4)
# create a regression model with multiple explanatory variables
my_model4 <- lm(rapes ~ NumStreet + NumInShelters + racepctblack + MalePctNevMarr, data = CommunityCrime22)
summary(my_model4)
create a regression model with multiple explanatory variables
# create a regression model with multiple explanatory variables
my_model4 <- lm(rapes ~ NumStreet + NumInShelters + racepctblack + PctPopUnderPov, data = CommunityCrime22)
# print out a summary of the model
summary(my_model4)
# create a regression model with multiple explanatory variables
my_model4 <- lm(rapes ~ NumInShelters + racepctblack + PctPopUnderPov, data = CommunityCrime22)
summary(my_model4)
# create a regression model with multiple explanatory variables
my_model4 <- lm(rapes ~ NumStreet + NumInShelters + racepctblack, data = CommunityCrime22)
summary(my_model4)
# create a regression model with multiple explanatory variables
my_model4 <- lm(ViolentCrimesPerPop ~ NumStreet + NumInShelters + racepctblack + PctEmploy + MalePctNevMarr + PctWorkMom, data = CommunityCrime11)
CommunityCrime <- read.table("https://archive.ics.uci.edu/ml/machine-learning-databases/00211/CommViolPredUnnormalizedData.txt", sep=",", na.strings = c("?"))
# The column names were given as a separate file, so I read it as a different data set.
data <- read.table("columnnames1.txt", sep=",")
# The data had another column that consisted of NA's; I didn't know what to do with it so I erased it.
names <- data[,-2]
# Assigned the names data as the column names for the dataset CommunityCrime
colnames(CommunityCrime) = names
CommunityCrime$communityname <- as.character(CommunityCrime$communityname)
CommunityCrime$state <- as.character(CommunityCrime$state)
exclude_columns <- c("county", "community", "communityCode", "countyCode", "PolicCars", "PctPolicWhite", "PctPolicBlack", "PctPolicHisp", "PctPolicAsian", "PctPolicMinor", "LemasPctPolicOnPatr", "PolicOperBudg", "LemasGangUnitDeploy", "PolicBudgPerPop", "PolicPerPop", "PolicReqPerOffic", "LemasTotalReq", "LemasTotReqPerPop", "LemasSwornFT", "LemasSwFTPerPop", "LemasSwFTFieldOps")
CommunityCrime11 <- dplyr::select(CommunityCrime, -one_of(exclude_columns))
dim(CommunityCrime11) # 2215 rows, 126 variables.
# Setting Community name and state as rownames and removing those variables from the data set.
rownames(CommunityCrime11) <- paste(CommunityCrime11$communityname, CommunityCrime11$state)
CommunityCrime11 <- CommunityCrime11[,-1]
CommunityCrime11 <- CommunityCrime11[,-1]
names(CommunityCrime11) # Checking whether this worked out - it did.
# Write table and save the data into the working directory for furher possible use
write.table(CommunityCrime11, file = "CommunityCrime11.txt", sep = ",", col.names = TRUE, row.names = TRUE)
CommunityCrime11 <- read.table('CommunityCrime11.txt', sep=",", header = TRUE)
# create a regression model with multiple explanatory variables
my_model4 <- lm(ViolentCrimesPerPop ~ NumStreet + NumInShelters + racepctblack + PctEmploy + MalePctNevMarr + PctWorkMom, data = CommunityCrime11)
summary(my_model4)
