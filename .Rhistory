?lda()
length(train$crim)
length(crime)
length(train$nox)
# print the lda.fit object
lda.fit
# target classes as numeric
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 3, col = classes, pch= classes)
# the function for lda biplot arrows
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
# plot the lda results
plot(lda.fit, dimen = 2, col  =classes, pch =classes)
lda.arrows(lda.fit, myscale = 10)
# lda.fit, correct_classes and test are available
?predict.lda
# predict classes with test data
lda.pred <- predict(lda.fit, newdata = test)
# cross tabulate the results
table(correct = correct_classes, predicted = lda.pred$class)
data("Boston")
?scale()
install.packages("clusterSim")
library(clusterSim)
data.Normalization (Boston,type="n2",normalization="column")
data.Normalization (x,type="n2",normalization="row")
data.Normalization (Boston,type="n2",normalization="row")
data("Boston")
library(clusterSim)
?scale
data.Normalization (Boston,type="n2",normalization="row")
library(MASS)
dist_eu <- dist(Boston)
summary(dist_eu)
km <-kmeans(dist_eu, centers = 4)
pairs(Boston, col = km$cluster)
library(ggplot2)
set.seed(123)
k_max <- 10
twcss <- sapply(1:k_max, function(k){kmeans(dist_eu, k)$tot.withinss})
# visualize the results
plot(1:k_max, twcss, type='b')
km <-kmeans(dist_eu, centers = 2)
pairs(Boston, col = km$cluster)
km <-kmeans(dist_eu, centers = 3)
lda.fit <- lda(km$cluster ~ . , data = Boston)
lda.fit
classes <- as.numeric(Boston$km$cluster)
classes <- as.numeric(km$cluster)
plot(lda.fit, dimen = 3, col = classes, pch= classes)
# the function for lda biplot arrows
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
# plot the lda results
plot(lda.fit, dimen = 2, col  =classes, pch =classes)
lda.arrows(lda.fit, myscale = 10)
lda.arrows(lda.fit, myscale = 20)
plot(lda.fit, dimen = 3, col = classes, pch= classes)
# the function for lda biplot arrows
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
# plot the lda results
plot(lda.fit, dimen = 2, col  =classes, pch =classes)
lda.arrows(lda.fit, myscale = 20)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
glimpse(hd)
str(hd)
summary(hd)
glimpse(gii)
str(gii)
summary(gii)
colnames(hd)
hd[1] <- "HDI index"
colnames(hd)
colnames(hd)[1] <- "Human Development Index"
knitr::opts_chunk$set(echo = TRUE)
install.packages("evaluate")
install.packages("evaluate")
setwd("F:/IODS-final")
keep_columns <- c("ViolenCrimesPerPop", "population", "PctForeignBorn","NumKindsDrugsSeiz", "RacialMatchCommPol", "PopDens","perCapInc", "PolicPerPop", "PctLess9thGrade","PctRecentImmig","NumInShelters", "racepctblack", "PctEmploy", "MalePctNevMarr", "PctWorkMom", "PctPopUnderPov", "NumStreet")
CommunityCrime22 <- dplyr::select(CommunityCrime11, one_of(keep_columns))
CommunityCrime <- read.table("https://archive.ics.uci.edu/ml/machine-learning-databases/00211/CommViolPredUnnormalizedData.txt", sep=",", na.strings = c("?"))
data <- read.table("columnnames1.txt", sep=",")
names <- data[,-2]
colnames(CommunityCrime) = names
library(gmodels) #accessed the gmodels-library
library(gdata) #accessed the gdata-library
library(dplyr) #accessed the dplyr-library
library(readr) #accessed the readr-library
library(tidyr) #accessed tidyr-library
library(gdata) #accessed the gdata-library
library(dplyr) #accessed the dplyr-library
library(readr) #accessed the readr-library
# The CommunityCrime data has 2215 rows and 147 columns, i. e. 2215 observations and 147 variables.
dim(CommunityCrime)
CommunityCrime <- read.table("https://archive.ics.uci.edu/ml/machine-learning-databases/00211/CommViolPredUnnormalizedData.txt", sep=",", na.strings = c("?"))
data <- read.table("columnnames1.txt", sep=",")
names <- data[,-2]
colnames(CommunityCrime) = names
dim(CommunityCrime)
dim(CommunityCrime)
rm(list = ls())
CommunityCrime <- read.table("https://archive.ics.uci.edu/ml/machine-learning-databases/00211/CommViolPredUnnormalizedData.txt", sep=",", na.strings = c("?"))
data <- read.table("columnnames1.txt", sep=",")
names <- data[,-2]
colnames(CommunityCrime) = names
colnames(CommunityCrime)
options(max.print=1000000) #maxprint, just in case
library(gmodels) #accessed the gmodels-library
library(gdata) #accessed the gdata-library
library(dplyr) #accessed the dplyr-library
library(readr) #accessed the readr-library
library(tidyr) #accessed tidyr-library
dim(CommunityCrime)
CommunityCrime$communityname <- as.character(CommunityCrime$communityname)
CommunityCrime$state <- as.character(CommunityCrime$state)
exclude_columns <- c("county", "community", "communityCode", "countyCode", "PolicCars", "PctPolicWhite", "PctPolicBlack", "PctPolicHisp", "PctPolicAsian", "PctPolicMinor", "LemasPctPolicOnPatr", "PolicOperBudg", "LemasGangUnitDeploy", "PolicBudgPerPop", "PolicPerPop", "PolicReqPerOffic", "LemasTotalReq", "LemasTotReqPerPop", "LemasSwornFT", "LemasSwFTPerPop", "LemasSwFTFieldOps")
CommunityCrime11 <- dplyr::select(CommunityCrime, -one_of(exclude_columns))
dim(CommunityCrime11) # 2215 rows, 128 variables.
# Setting Community name and state as rownames and removing those variables from the data set.
rownames(CommunityCrime11) <- paste(CommunityCrime11$communityname,",", CommunityCrime11$state)
CommunityCrime11 <- CommunityCrime11[,-1]
CommunityCrime11 <- CommunityCrime11[,-1]
names(CommunityCrime11) # Checking whether this worked out - it did.
rownames(CommunityCrime11)
# Write table and save the data into the working directory for furher use in linear regression for nearly all of the variables.
write.table(CommunityCrime11, file = "CommunityCrime11.txt", sep = ",", col.names = TRUE, row.names = TRUE)
# Configure data further: keep only interesting columns "ViolenCrimesPerPop", "population", "PctForeignBorn","NumKindsDrugsSeiz", "RacialMatchCommPol", "PopDens","perCapInc", "PolicPerPop", "PctLess9thGrade","PctRecentImmig","NumInShelters", "racepctblack", "PctEmploy", "MalePctNevMarr", "PctWorkMom", "PctPopUnderPov" and "NumStreet".
keep_columns <- c("ViolenCrimesPerPop", "population", "PctForeignBorn","NumKindsDrugsSeiz", "RacialMatchCommPol", "PopDens","perCapInc", "PolicPerPop", "PctLess9thGrade","PctRecentImmig","NumInShelters", "racepctblack", "PctEmploy", "MalePctNevMarr", "PctWorkMom", "PctPopUnderPov", "NumStreet")
CommunityCrime22 <- dplyr::select(CommunityCrime11, one_of(keep_columns))
keep_columns <- c("ViolentCrimesPerPop", "population", "PctForeignBorn","NumKindsDrugsSeiz", "RacialMatchCommPol", "PopDens","perCapInc", "PolicBudgPerPop", "PctLess9thGrade","PctRecentImmig","NumInShelters", "racepctblack", "PctEmploy", "MalePctNevMarr", "PctWorkMom", "PctPopUnderPov", "NumStreet")
CommunityCrime22 <- dplyr::select(CommunityCrime11, one_of(keep_columns))
keep_columns <- c("ViolentCrimesPerPop", "population", "PctForeignBorn","NumKindsDrugsSeiz", "RacialMatchCommPol", "PopDens","perCapInc", "PctUsePubTrans", "PctLess9thGrade","PctRecentImmig","NumInShelters", "racepctblack", "PctEmploy", "MalePctNevMarr", "PctWorkMom", "PctPopUnderPov", "NumStreet")
CommunityCrime22 <- dplyr::select(CommunityCrime11, one_of(keep_columns))
dim(CommunityCrime22) # 2215 observations, 10 variables.
# Write table and save the smaller data into working directory for working on linear regression.
write.table(CommunityCrime22, file = "CommunityCrime22.txt", sep = ",", col.names = TRUE, row.names = TRUE)
CommunityCrime["Homeless"] <- round((CommunityCrime["NumStreet"] + CommunityCrime["NumInShelters"]) / CommunityCrime["population"] * 100, digits = 1)
CommunityCrime$Homeless
CommunityCrime["Homeless"] <- round((CommunityCrime["NumStreet"] + CommunityCrime["NumInShelters"]) / CommunityCrime["population"] * 100, digits = 2)
CommunityCrime$Homeless
CommunityCrime["PctHomeless"] <- round((CommunityCrime["NumStreet"] + CommunityCrime["NumInShelters"]) / CommunityCrime["population"] * 100, digits = 2)
CommunityCrime["PctImmigrant"] <- round((CommunityCrime["NumImmig"]) / CommunityCrime["population"] * 100, digits = 2)
CommunityCrime$PctImmigrant
CommunityCrime$PctForeignBorn
CommunityCrime["PctWorkMomTotal"] <- round((CommunityCrime["PctWorkMomYoungKids"] + CommunityCrime["PctWorkMom"]), digits = 2)
CommunityCrime$PctWorkMomTotal
rm(list = ls())
# Reading the full Community and Crime data into R
CommunityCrime <- read.table("https://archive.ics.uci.edu/ml/machine-learning-databases/00211/CommViolPredUnnormalizedData.txt", sep=",", na.strings = c("?"))
data <- read.table("columnnames1.txt", sep=",")
names <- data[,-2]
colnames(CommunityCrime) = names
options(max.print=1000000) #maxprint, just in case
library(gmodels) #accessed the gmodels-library
library(gdata) #accessed the gdata-library
library(dplyr) #accessed the dplyr-library
library(readr) #accessed the readr-library
library(tidyr) #accessed tidyr-library
dim(CommunityCrime)
CommunityCrime$communityname <- as.character(CommunityCrime$communityname)
CommunityCrime$state <- as.character(CommunityCrime$state)
CommunityCrime$PctWorkMomTotal
exclude_columns <- c("county", "community", "communityCode", "countyCode", "PolicCars", "PctPolicWhite", "PctPolicBlack", "PctPolicHisp", "PctPolicAsian", "PctPolicMinor", "LemasPctPolicOnPatr", "PolicOperBudg", "LemasGangUnitDeploy", "PolicBudgPerPop", "PolicPerPop", "PolicReqPerOffic", "LemasTotalReq", "LemasTotReqPerPop", "LemasSwornFT", "LemasSwFTPerPop", "LemasSwFTFieldOps")
# Creating a new variable for the linear regression: total percent of homeless.
CommunityCrime["PctHomeless"] <- round((CommunityCrime["NumStreet"] + CommunityCrime["NumInShelters"]) / CommunityCrime["population"] * 100, digits = 2)
CommunityCrime11 <- dplyr::select(CommunityCrime, -one_of(exclude_columns))
dim(CommunityCrime11) # 2215 rows, 128 variables.
rm(list = ls())
# Reading the full Community and Crime data into R
CommunityCrime <- read.table("https://archive.ics.uci.edu/ml/machine-learning-databases/00211/CommViolPredUnnormalizedData.txt", sep=",", na.strings = c("?"))
data <- read.table("columnnames1.txt", sep=",")
names <- data[,-2]
colnames(CommunityCrime) = names
colnames(CommunityCrime)
colnames(CommunityCrime)
rm(list = ls())
CommunityCrime <- read.table("https://archive.ics.uci.edu/ml/machine-learning-databases/00211/CommViolPredUnnormalizedData.txt", sep=",", na.strings = c("?"))
data <- read.table("columnnames1.txt", sep=",")
names <- data[,-2]
colnames(CommunityCrime) = names
colnames(CommunityCrime)
library(gmodels) #accessed the gmodels-library
library(gdata) #accessed the gdata-library
library(dplyr) #accessed the dplyr-library
library(readr) #accessed the readr-library
library(tidyr) #accessed tidyr-library
dim(CommunityCrime)
CommunityCrime$communityname <- as.character(CommunityCrime$communityname)
CommunityCrime$state <- as.character(CommunityCrime$state)
exclude_columns <- c("county", "community", "communityCode", "countyCode", "PolicCars", "PctPolicWhite", "PctPolicBlack", "PctPolicHisp", "PctPolicAsian", "PctPolicMinor", "LemasPctPolicOnPatr", "PolicOperBudg", "LemasGangUnitDeploy", "PolicBudgPerPop", "PolicPerPop", "PolicReqPerOffic", "LemasTotalReq", "LemasTotReqPerPop", "LemasSwornFT", "LemasSwFTPerPop", "LemasSwFTFieldOps")
CommunityCrime["PctHomeless"] <- round((CommunityCrime["NumStreet"] + CommunityCrime["NumInShelters"]) / CommunityCrime["population"] * 100, digits = 2)
CommunityCrime11 <- dplyr::select(CommunityCrime, -one_of(exclude_columns))
colnames(CommunityCrime11)
dim(CommunityCrime11) # 2215 rows, 128 variables.
rownames(CommunityCrime11) <- paste(CommunityCrime11$communityname, CommunityCrime11$state, sep = ",")
CommunityCrime11 <- CommunityCrime11[,-1]
CommunityCrime11 <- CommunityCrime11[,-1]
rownames(CommunityCrime11)
names(CommunityCrime11)
# Write table and save the data into the working directory for furher use in linear regression for nearly all of the variables.
write.table(CommunityCrime11, file = "CommunityCrime11.txt", sep = ",", col.names = TRUE, row.names = TRUE)
keep_columns <- c("ViolentCrimesPerPop", "population", "PctForeignBorn","PctHomeless", "RacialMatchCommPol", "PopDens","perCapInc", "PctUsePubTrans", "PctLess9thGrade","PctRecentImmig","NumInShelters", "racepctblack", "PctEmploy", "MalePctNevMarr", "PctWorkMom", "PctPopUnderPov", "NumStreet", "MedIncome", "PctPersDenseHous")
CommunityCrime22 <- dplyr::select(CommunityCrime11, one_of(keep_columns))
keep_columns <- c("ViolentCrimesPerPop", "population", "PctForeignBorn","PctHomeless", "RacialMatchCommPol", "PopDens","perCapInc", "PctUsePubTrans", "PctLess9thGrade","PctRecentImmig","NumInShelters", "racepctblack", "PctEmploy", "MalePctNevMarr", "PctWorkMom", "PctPopUnderPov", "NumStreet", "medIncome", "PctPersDenseHous")
CommunityCrime22 <- dplyr::select(CommunityCrime11, one_of(keep_columns))
dim(CommunityCrime22) # 2215 observations, 17 variables.
# Write table and save the smaller data into working directory for working on linear regression.
write.table(CommunityCrime22, file = "CommunityCrime22.txt", sep = ",", col.names = TRUE, row.names = TRUE)
CommunityCrime11 <- read.table('CommunityCrime11.txt', sep=",", header = TRUE)
# Accessing libraries:
library(gmodels)
library(gdata)
library(dplyr)
library(ggplot2)
library(readr)
library(tidyr)
library(tidyverse)
library(corrplot)
library(GGally)
library(stringr)
options(max.print=1000000)
CommunityCrime11 <- read.table('CommunityCrime11.txt', sep=",", header = TRUE)
rownames(CommunityCrime11)
str(CommunityCrime11)
glimpse(CommunityCrime11)
# Accessing libraries:
library(gmodels)
library(gdata)
library(dplyr)
library(ggplot2)
library(readr)
library(tidyr)
library(tidyverse)
library(corrplot)
library(GGally)
library(stringr)
options(max.print=1000000)
CommunityCrime22 <- read.table('CommunityCrime22.txt', sep=",", header = TRUE)
rownames(CommunityCrime11)
str(CommunityCrime11)
glimpse(CommunityCrime11)
keep_columns <- c("ViolentCrimesPerPop", "population", "PctForeignBorn","PctHomeless", "RacialMatchCommPol", "PopDens","perCapInc", "PctUsePubTrans", "PctLess9thGrade","PctRecentImmig","NumInShelters","PctUsePubTrans", "racepctblack", "PctEmploy", "MalePctNevMarr", "PctWorkMom", "PctPopUnderPov", "NumStreet", "medIncome", "PctPersDenseHous")
CommunityCrime22 <- dplyr::select(CommunityCrime11, one_of(keep_columns))
dim(CommunityCrime22) # 2215 observations, 19 variables.
# Write table and save the smaller data into working directory for working on linear regression.
write.table(CommunityCrime22, file = "CommunityCrime22.txt", sep = ",", col.names = TRUE, row.names = TRUE)
CommunityCrime22 <- read.table('CommunityCrime22.txt', sep=",", header = TRUE)
rownames(CommunityCrime11)
# Accessing libraries:
library(gmodels)
library(gdata)
library(dplyr)
library(ggplot2)
library(readr)
library(tidyr)
library(tidyverse)
library(corrplot)
library(GGally)
library(stringr)
options(max.print=1000000)
CommunityCrime22 <- read.table('CommunityCrime22.txt', sep=",", header = TRUE)
rownames(CommunityCrime22)
str(CommunityCrime22)
glimpse(CommunityCrime22)
keep_columns <- c("ViolentCrimesPerPop", "population", "PctForeignBorn","PctHomeless", "PopDens","perCapInc", "PctUsePubTrans", "PctLess9thGrade","PctRecentImmig","NumInShelters","PctUsePubTrans", "racepctblack", "PctEmploy", "MalePctNevMarr", "PctWorkMom", "PctPopUnderPov", "NumStreet", "medIncome", "PctPersDenseHous")
CommunityCrime22 <- dplyr::select(CommunityCrime11, one_of(keep_columns))
dim(CommunityCrime22) # 2215 observations, 19 variables.
# Write table and save the smaller data into working directory for working on linear regression.
write.table(CommunityCrime22, file = "CommunityCrime22.txt", sep = ",", col.names = TRUE, row.names = TRUE)
# Accessing libraries:
library(gmodels)
library(gdata)
library(dplyr)
library(ggplot2)
library(readr)
library(tidyr)
library(tidyverse)
library(corrplot)
library(GGally)
library(stringr)
options(max.print=1000000)
CommunityCrime22 <- read.table('CommunityCrime22.txt', sep=",", header = TRUE)
rownames(CommunityCrime22)
str(CommunityCrime22)
glimpse(CommunityCrime22)
summary(CommunityCrime22)
ggpairs(CommunityCrimes22)
ggpairs(CommunityCrime22)
p11 <- ggplot(CommunityCrime22, aes(x = PctWorkMom, y = ViolentCrimesPerPop, col =rownames(CommunityCrime22)))
library(GGally)
library(ggplot2)
library(ggplot)
library(gmodels)
warnings()
warnings()
?ggpairs
library(GGally)
warnings()
helsinki_std <- as.data.frame(scale(CommunityCrime22)) # Standardise.
pca_hki_std <- prcomp(helsinki_std) # Perform the PCA.
CommunityCrime2211 <- na.omit(CommunityCrime22)
summary(CommunityCrime2211)
CommunityCrime2211_std <- as.data.frame(scale(CommunityCrime2211)) # Standardise.
pcaCC2211_std <- prcomp(CommunityCrime2211_std) # Perform the PCA.
sumpcaCC2211_std <- summary(pcaCC2211_std) # Summarise the results.
sumpcaCC2211_std # Print summary.
dim(CommunityCrime2211)
CommunityCrime2211 <- na.omit(CommunityCrime22)
summary(CommunityCrime2211)
corrplot(round(cor(CommunityCrime2211), digits = 2), method = "circle", type = "upper", tl.pos = "d", tl.cex = 0.8)
CommunityCrime2211_std <- as.data.frame(scale(CommunityCrime2211)) # Standardise.
pcaCC2211_std <- prcomp(CommunityCrime2211_std) # Perform the PCA.
sumpcaCC2211_std <- summary(pcaCC2211_std) # Summarise the results.
sumpcaCC2211_std # Print summary.
# Extract percentages of variance from the summary (for the plot titles).
pr_CC2211s <- round(100*sumpcaCC2211_std$importance[2, ], digits = 1)
pc_CC2211_lab <- paste0(names(pr_CC2211s), " (", pr_CC2211s, "%)") # Create plot axis titles.
# Plot
biplot(pcaCC2211_std, choices = 1:2, cex = c(0.7, 0.8), col = c("grey40", "deeppink2"), xlab = pc_CC2211_lab[1], ylab = pc_CC2211_lab[2])
library(GGally)
library(GGally)
library(ggplot2)
library(GGally)
library(GGally)
?corrplot
library(corrplot)
boston_st <- scale(Boston)
# Extract percentages of variance from the summary (for the plot titles).
pr_CC2211s <- round(100*sumpcaCC2211_std$importance[2, ], digits = 1)
pc_CC2211_lab <- paste0(names(pr_CC2211s), " (", pr_CC2211s, "%)") # Create plot axis titles.
# Plot
biplot(pcaCC2211_std, cex = c(0.8, 0.1), col = c("grey40", "deeppink2"), xlab = pc_CC2211_lab[1], ylab = pc_CC2211_lab[2])
CommunityCrime22111[-"NewYorkcity,NY"]
CommunityCrime22111<- CommunityCrime2211[-"NewYorkcity,NY"]
CommunityCrime22111<- CommunityCrime2211[-"NewYorkcity,NY",]
rownames(CommunityCrime2211)
CommunityCrime22111<- CommunityCrime2211[-18,]
CommunityCrime22111_std <- as.data.frame(scale(CommunityCrime22111)) # Standardise.
pcaCC22111_std <- prcomp(CommunityCrime22111_std) # Perform the PCA.
sumpcaCC22111_std <- summary(pcaCC22111_std) # Summarise the results.
sumpcaCC22111_std # Print summary.
pr_CC22111s <- round(100*sumpcaCC22111_std$importance[2, ], digits = 1)
pc_CC22111_lab <- paste0(names(pr_CC22111s), " (", pr_CC22111s, "%)") # Create plot axis titles.
biplot(pcaCC22111_std, cex = c(0.8, 0.1), col = c("grey40", "deeppink2"), xlab = pc_CC22111_lab[1], ylab = pc_CC22111_lab[2])
CommunityCrime22111_std <- as.data.frame(scale(CommunityCrime2211)) # Standardise.
pcaCC2211_std <- prcomp(CommunityCrime2211_std) # Perform the PCA.
sumpcaCC2211_std <- summary(pcaCC2211_std) # Summarise the results.
sumpcaCC2211_std # Print summary.
# Extract percentages of variance from the summary (for the plot titles).
pr_CC2211s <- round(100*sumpcaCC22111_std$importance[2, ], digits = 1)
pc_CC22111_lab <- paste0(names(pr_CC2211s), " (", pr_CC2211s, "%)") # Create plot axis titles.
# Plot
biplot(pcaCC2211_std, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_CC2211_lab[1], ylab = pc_CC2211_lab[2])
# Extract percentages of variance from the summary (for the plot titles).
pr_CC2211s <- round(100*sumpcaCC22111_std$importance[2, ], digits = 1)
pc_CC22111_lab <- paste0(names(pr_CC2211s), " (", pr_CC2211s, "%)") # Create plot axis titles.
# Plot
biplot(pcaCC2211_std, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_CC2211_lab[1], ylab = pc_CC2211_lab[2])
# Extract percentages of variance from the summary (for the plot titles).
pr_CC2211s <- round(100*sumpcaCC22111_std$importance[2, ], digits = 1)
pc_CC22111_lab <- paste0(names(pr_CC2211s), " (", pr_CC2211s, "%)") # Create plot axis titles.
# Plot
biplot(pcaCC2211_std, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_CC2211_lab[1], ylab = pc_CC2211_lab[2])
# Extract percentages of variance from the summary (for the plot titles).
pr_CC2211s <- round(100*sumpcaCC22111_std$importance[2, ], digits = 1)
pc_CC22111_lab <- paste0(names(pr_CC2211s), " (", pr_CC2211s, "%)") # Create plot axis titles.
# Plot
biplot(pcaCC2211_std, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_CC2211_lab[1], ylab = pc_CC2211_lab[2])
# Extract percentages of variance from the summary (for the plot titles).
pr_CC2211s <- round(100*sumpcaCC22111_std$importance[2, ], digits = 1)
pc_CC22111_lab <- paste0(names(pr_CC2211s), " (", pr_CC2211s, "%)") # Create plot axis titles.
# Plot
biplot(pcaCC2211_std, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_CC2211_lab[1], ylab = pc_CC2211_lab[2])
library(clusterSim)
CommunityCrime22111_s <- as.data.frame(CommunityCrime2211)
library(clusterSim)
data.Normalization (CommunityCrime22111_s,type="n4",normalization="column")
CommunityCrime22111_sn <- data.Normalization (CommunityCrime22111_s,type="n4",normalization="column")
pcaCC2211_std <- prcomp(CommunityCrime2211_sn) # Perform the PCA.
pcaCC2211_std <- prcomp(CommunityCrime22111_sn) # Perform the PCA.
sumpcaCC2211_std <- summary(pcaCC2211_std) # Summarise the results.
sumpcaCC2211_std # Print summary.
pr_CC2211s <- round(100*sumpcaCC22111_std$importance[2, ], digits = 1)
pc_CC22111_lab <- paste0(names(pr_CC2211s), " (", pr_CC2211s, "%)") # Create plot axis titles.
biplot(pcaCC2211_std, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_CC2211_lab[1], ylab = pc_CC2211_lab[2])
CommunityCrime22111_snst <- scale(CommunityCrime22111_sn)
summary(CommunityCrime22111_snst)
pcaCC2211_std <- prcomp(CommunityCrime22111_snst) # Perform the PCA.
sumpcaCC2211_std <- summary(pcaCC2211_std) # Summarise the results.
sumpcaCC2211_std # Print summary.
pr_CC2211s <- round(100*sumpcaCC22111_std$importance[2, ], digits = 1)
pc_CC22111_lab <- paste0(names(pr_CC2211s), " (", pr_CC2211s, "%)") # Create plot axis titles.
biplot(pcaCC2211_std, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_CC2211_lab[1], ylab = pc_CC2211_lab[2])
summary(CommunityCrime22111_sn)
CommunityCrime22111_s <- as.data.frame(scale(CommunityCrime2211))
summary(CommunityCrime22111_s)
pcaCC2211_std <- prcomp(CommunityCrime22111_s) # Perform the PCA.
sumpcaCC2211_std <- summary(pcaCC2211_std) # Summarise the results.
sumpcaCC2211_std # Print summary.
pr_CC2211s <- round(100*sumpcaCC22111_std$importance[2, ], digits = 1)
pc_CC22111_lab <- paste0(names(pr_CC2211s), " (", pr_CC2211s, "%)") # Create plot axis titles.
biplot(pcaCC2211_std, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_CC2211_lab[1], ylab = pc_CC2211_lab[2], xlim=c(-0.1, 0.15), ylim=c(-0.1, 0.15))
biplot(pcaCC2211_std, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_CC2211_lab[1], ylab = pc_CC2211_lab[2], xlim=c(-0.07, 0.11), ylim=c(-0.1, 0.06))
biplot(pcaCC2211_std, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_CC2211_lab[1], ylab = pc_CC2211_lab[2], xlim=c(-0.07, 0.11), ylim=c(-0.06, 0.1))
biplot(pcaCC2211_std, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_CC2211_lab[1], ylab = pc_CC2211_lab[2], xlim=c(-0.06, 0.11), ylim=c(-0.05, 0.1))
biplot(pcaCC2211_std, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_CC2211_lab[1], ylab = pc_CC2211_lab[2], xlim=c(-0.04, 0.11), ylim=c(-0.05, 0.1))
biplot(pcaCC2211_std, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_CC2211_lab[1], ylab = pc_CC2211_lab[2], xlim=c(-0.05, 0.11), ylim=c(-0.05, 0.1))
biplot(pcaCC2211_std, cex = c(0.8, 1), col = c("LightGray", "black"), xlab = pc_CC2211_lab[1], ylab = pc_CC2211_lab[2], xlim=c(-0.05, 0.11), ylim=c(-0.05, 0.1))
biplot(pcaCC2211_std, cex = c(0.8, 1), col = c("LightGray", "black"), xlab = pc_CC2211_lab[1], ylab = pc_CC2211_lab[2], xlim=c(-0.05, 0.11), ylim=c(-0.05, 0.1))
library(ggplot2)
library(GGally)
# create a regression model with multiple explanatory variables
my_model4 <- lm(ViolentCrimesPerPop ~ PctHomeless + racepctblack + PctLess9thGrade + perCapitaInc + MalePctNevMarr + PctEmploy + PctWorkMom + PctPopUnderPov + PctPersDenseHousing, data = CommunityCrime22)
# create a regression model with multiple explanatory variables
my_model4 <- lm(ViolentCrimesPerPop ~ PctHomeless + racepctblack + PctLess9thGrade + perCapInc + MalePctNevMarr + PctEmploy + PctWorkMom + PctPopUnderPov + PctPersDenseHousing, data = CommunityCrime22)
# create a regression model with multiple explanatory variables
my_model4 <- lm(ViolentCrimesPerPop ~ PctHomeless + racepctblack + PctLess9thGrade + perCapInc + MalePctNevMarr + PctEmploy + PctWorkMom + PctPopUnderPov + PctPersDenseHous, data = CommunityCrime22)
summary(my_model4)
# create a regression model with multiple explanatory variables
my_model4 <- lm(ViolentCrimesPerPop ~ PctHomeless + racepctblack + PctLess9thGrade + MalePctNevMarr + PctEmploy + PctWorkMom + PctPopUnderPov + PctPersDenseHous, data = CommunityCrime22)
summary(my_model4)
# create a regression model with multiple explanatory variables
my_model4 <- lm(ViolentCrimesPerPop ~ PctHomeless + racepctblack + PctLess9thGrade + PctEmploy + PctWorkMom + PctPopUnderPov + PctPersDenseHous, data = CommunityCrime22)
summary(my_model4)
# create a regression model with multiple explanatory variables
my_model4 <- lm(ViolentCrimesPerPop ~ PctHomeless + racepctblack + PctEmploy + PctWorkMom + PctPopUnderPov + PctPersDenseHous, data = CommunityCrime22)
summary(my_model4)
# create a regression model with multiple explanatory variables
my_model4 <- lm(ViolentCrimesPerPop ~ PctHomeless + racepctblack + PctEmploy + PctWorkMom + PctLess9thGrade + PctPopUnderPov + PctPersDenseHous, data = CommunityCrime22)
summary(my_model4)
# create a regression model with multiple explanatory variables
my_model4 <- lm(ViolentCrimesPerPop ~ PctHomeless + racepctblack + PctEmploy + PctWorkMom  + PctPopUnderPov + PctPersDenseHous, data = CommunityCrime22)
summary(my_model4)
# create a regression model with multiple explanatory variables
my_model4 <- lm(ViolentCrimesPerPop ~  racepctblack + PctEmploy + PctWorkMom + perCapInc + MalePctNevMarr + PctLess9thGrade + PctPopUnderPov + PctPersDenseHous, data = CommunityCrime22)
summary(my_model4)
# create a regression model with multiple explanatory variables
my_model4 <- lm(ViolentCrimesPerPop ~  racepctblack + PctEmploy + PctWorkMom +  MalePctNevMarr + PctLess9thGrade + PctPopUnderPov + PctPersDenseHous, data = CommunityCrime22)
PctHomeless +perCapInc +
# print out a summary of the model
summary(my_model4)
summary(my_model4)
# create a regression model with multiple explanatory variables
my_model4 <- lm(ViolentCrimesPerPop ~  racepctblack + PctEmploy + PctWorkMom + PctLess9thGrade + PctPopUnderPov + PctPersDenseHous, data = CommunityCrime22)
summary(my_model4)
# create a regression model with multiple explanatory variables
my_model4 <- lm(ViolentCrimesPerPop ~  racepctblack +PctHomeless + PctEmploy + PctWorkMom  + PctPopUnderPov + PctPersDenseHous, data = CommunityCrime22)
summary(my_model4)
# create a regression model with multiple explanatory variables
my_model4 <- lm(ViolentCrimesPerPop ~ racepctblack + PctHomeless + PctEmploy + PctWorkMom + PctPopUnderPov + PctPersDenseHous + perCapInc + MalePctNevMarr+ PctLess9thGrade, data = CommunityCrime22)
summary(my_model4)
# create a regression model with multiple explanatory variables
my_model4 <- lm(ViolentCrimesPerPop ~ racepctblack + PctHomeless + PctEmploy + PctWorkMom + PctPersDenseHous +  PctLess9thGrade, data = CommunityCrime22)
PctPopUnderPov + perCapInc + MalePctNevMarr+
# print out a summary of the model
summary(my_model4)
PctPopUnderPov + perCapInc + MalePctNevMarr+
# print out a summary of the model
summary(my_model4)
summary(my_model4)
# create a regression model with multiple explanatory variables
my_model4 <- lm(ViolentCrimesPerPop ~ racepctblack + PctHomeless + PctEmploy + PctWorkMom + PctPersDenseHous, data = CommunityCrime22)
summary(my_model4)
# create a regression model with multiple explanatory variables
my_model4 <- lm(ViolentCrimesPerPop ~ racepctblack + PctHomeless + PctEmploy + PctWorkMom + PctPersDenseHous, data = CommunityCrime22)
summary(my_model4)
# create a regression model with multiple explanatory variables
my_model4 <- lm(ViolentCrimesPerPop ~ racepctblack + PctHomeless + PctEmploy + PctWorkMom + PctPersDenseHous+ PctPopUnderPov, data = CommunityCrime22)
summary(my_model4)
# create a regression model with multiple explanatory variables
CC22_lm <- lm(ViolentCrimesPerPop ~ racepctblack + PctHomeless + PctEmploy + PctWorkMom + PctPersDenseHous, data = CommunityCrime22)
# print out a summary of the model
summary(my_model4)
plot(CC22_lm, which = c(2))
plot(my_model4, which = c(2))
plot(CC22_lm, which = c(2))
# create a regression model with multiple explanatory variables
CC22_lm1 <- lm(ViolentCrimesPerPop ~ racepctblack + NumStreet + PctEmploy + PctWorkMom + MalePctNevMarr, data = CommunityCrime22)
summary(CC22_lm1)
plot(CC22_lm1, which = c(2))
# create a regression model with multiple explanatory variables
CC22_lm1 <- lm(ViolentCrimesPerPop ~ racepctblack + NumStreet + PctEmploy + PctWorkMom + MalePctNevMarr + PctPersDenseHous, data = CommunityCrime22)
summary(CC22_lm1)
plot(CC22_lm1, which = c(2))
# create a regression model with multiple explanatory variables
CC22_lm1 <- lm(ViolentCrimesPerPop ~ racepctblack + NumStreet + PctEmploy + PctWorkMom + MalePctNevMarr + perCapInc, data = CommunityCrime22)
summary(CC22_lm1)
CC22_lm1 <- lm(ViolentCrimesPerPop ~ racepctblack + NumStreet+ PctWorkMom + MalePctNevMarr + perCapInc, data = CommunityCrime22)
summary(CC22_lm1)
plot(CC22_lm1, which = c(2))
plot(CC22_lm1, which = c(2))
